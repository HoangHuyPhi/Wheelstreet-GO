//
//  StatusBarView.swift
//  Wheelstreet
//
//  Created by JOGENDRA on 11/12/17.
//  Copyright Â© 2017 Kush Taneja. All rights reserved.
//

import UIKit

public enum UserStatus {
    case notLoggedIn
    case loggedIn
    case notVarified
    case underVarification
    case varified
    case uploadLicense
    case none
}

protocol StatusBarViewDelegate: class {
    func didTappedStatusBarActionButton()
}

class StatusBarView: UIView {
    
    @IBOutlet weak var statusBarActionButton: UIButton!
    
    var userStatus = UserStatus.notLoggedIn
    
    weak var statusBarDelegate: StatusBarViewDelegate?
    
    var homevc: HomeViewController?
    
    override func awakeFromNib() {
        super.awakeFromNib()
        homevc?.homeStatusBarDelegate = self
        statusBarActionButtonSetup(userStatus: userStatus)
        buttonSetup()
    }
    
    
    func statusBarActionButtonSetup(userStatus: UserStatus) {
        
        statusBarActionButton.setTitleColor(.white, for: .normal)
        
        switch userStatus {
        case .loggedIn:
            statusBarActionButton.backgroundColor = UIColor(red:0.1, green:0.81, blue:0.57, alpha:1)
            statusBarActionButton.setTitle("Successfully logged in", for: .normal)
        case .notLoggedIn:
            statusBarActionButton.backgroundColor = UIColor(red:0.81, green:0.1, blue:0.1, alpha:1)
            statusBarActionButton.setTitle("Please Tap here to login", for: .normal)
        case .varified:
            statusBarActionButton.backgroundColor = UIColor(red:0.1, green:0.81, blue:0.57, alpha:1)
            statusBarActionButton.setTitle("Driving License Status: Varified", for: .normal)
        case .notVarified:
            statusBarActionButton.backgroundColor = UIColor(red:0.81, green:0.1, blue:0.1, alpha:1)
            statusBarActionButton.setTitle("Driving license status: Disapproved", for: .normal)
        case .underVarification:
            statusBarActionButton.backgroundColor = UIColor(red:0.96, green:0.65, blue:0.14, alpha:1)
            statusBarActionButton.setTitle("Driving License Status: Under Varification", for: .normal)
        case .uploadLicense:
            statusBarActionButton.backgroundColor = UIColor.black
            statusBarActionButton.setTitle("Tap here to Upload Driving License", for: .normal)
        case .none:
            statusBarActionButton.isHidden = true
            self.translatesAutoresizingMaskIntoConstraints = false
            self.heightAnchor.constraint(equalToConstant: 0.0).isActive = true
            self.isHidden = true
        }
        self.backgroundColor = statusBarActionButton.backgroundColor
    }
    
    func buttonSetup() {
        statusBarActionButton.translatesAutoresizingMaskIntoConstraints = false
        statusBarActionButton.topAnchor.constraint(equalTo: self.topAnchor, constant: 8.0).isActive = true
        statusBarActionButton.leadingAnchor.constraint(equalTo: self.leadingAnchor).isActive = true
        statusBarActionButton.trailingAnchor.constraint(equalTo: self.trailingAnchor).isActive = true
        statusBarActionButton.addTarget(self, action: #selector(statusBarActionButtonTapped(_:)), for: .touchUpInside)
    }
<<<<<<< HEAD
  @IBAction func didTapButton(_ sender: Any) {
//    let kycScreen = GOKYCUploadViewController(nibName: "GOKYCUploadViewController", bundle: nil, type: .front)

    let kycScreen = OnTripViewController(nibName: "OnTripViewController", bundle: nil)
    kycScreen.view.frame = UIScreen.main.bounds

    UIApplication.topViewController()?.present(kycScreen, animated: true, completion: nil)

  }
=======
    
    @objc func statusBarActionButtonTapped(_ sender: Any) {
        statusBarDelegate?.didTappedStatusBarActionButton()
    }

}
>>>>>>> 5543de5bf77f00019e3203c5b277175f1b710051

extension StatusBarView: HomeStatusBarDelegate {
    func didChangeUserStatus(homeUserStatus: UserStatus) {
        statusBarActionButtonSetup(userStatus: homeUserStatus)
    }
}
